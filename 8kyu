func flip(_ direction: String, _ a: [Int]) -> [Int] {
    if direction == "R" {
        return a.sorted { $0 < $1}
    } else if direction == "L" {
        return a.sorted {$0 > $1}
    } else {
        return []
    }
}

print(flip("R", [3,4,5,6,8,9,1]))


//Thinkful - Logic Drills: Traffic light
func update_light(_ current: String) -> String {
    
    switch current {
    case "green":  return "yellow"
    case "yellow": return "red"
    case "red":    return "green"
    default:       return "error"
    }
}
 
print(update_light("yellow"))

//Expressions Matter
func expressionMatter(_ a: Int, _ b: Int, _ c: Int) -> Int {
    
    guard a >= 1 && a <= 10 && b >= 1 && b <= 10 && c >= 1  && c <= 10 else { return 0 }
   
    let result1: Int = a + b + c
    let result2: Int = a * b + c
    let result3: Int = a + b * c
    let result4: Int = (a + b) * c
    let result5: Int = a * b * c
    let result6: Int = a * (b + c)

    return [result1, result2, result3, result4, result5, result6].max()!
}

print(expressionMatter(98, 4, 4))


//Convert number to reversed array of digits
func digitize(_ num:Int) -> [Int] {
  return String(num).compactMap{$0.wholeNumberValue}.reversed()
}

//Volume of a Cuboid
func getVolumeOfCuboid(length: Int, width: Int, height: Int) -> Int {
  length * width * height
}

//Dollars and Cents
func formatMoney(_ val:Double) -> String {
  return String(format: "$%.2f", val)
}


//Remove First and Last Character
func removeFirstAndLast(_ str: String) -> String {
    
    let firstIndex = str.index(after: str.startIndex)
    let lastIndex = str.index(before: str.endIndex)
    return String(str[firstIndex..<lastIndex])
}

print(removeFirstAndLast("Hello"))


//Get the mean of an array
func getAverage(_ marks: [Int]) -> Int {
    var result = Double(marks.reduce(0, +)/marks.count)
    
    return Int(floor(result))
}

print(getAverage([4,6,7,10]))

//Grasshopper - Messi goals function
func goals(laLigaGoals: Int, copaDelReyGoals: Int, championsLeagueGoals: Int) -> Int {
  return laLigaGoals + copaDelReyGoals + championsLeagueGoals
}
